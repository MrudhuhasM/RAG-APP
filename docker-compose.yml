services:
  rag-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: rag-app:latest
    container_name: rag-app
    ports:
      - "8000:8000"
    environment:
      # Environment
      - ENV=production
      - LOG_LEVEL=INFO
      
      # Application Settings
      - APP_NAME=RAG App
      - APP_VERSION=0.1.0
      - MAX_FILE_SIZE=10485760
      - CORS_ALLOWED_ORIGINS=*
      
      # HTTP Timeouts
      - HTTP_TIMEOUT=30.0
      - EMBEDDING_TIMEOUT=20.0
      
      # OpenAI Configuration
      - OPENAI__API_KEY=${OPENAI_API_KEY:-}
      - OPENAI__EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-}
      - OPENAI__COMPLETION_MODEL=${OPENAI_COMPLETION_MODEL:-}
      
      # Gemini Configuration (Optional)
      - GEMINI__API_KEY=${GEMINI_API_KEY:-}
      - GEMINI__EMBEDDING_MODEL=${GEMINI_EMBEDDING_MODEL:-}
      - GEMINI__COMPLETION_MODEL=${GEMINI_COMPLETION_MODEL:-}
      
      # Provider Selection
      - EMBEDDING__PROVIDER=${EMBEDDING_PROVIDER:-gemini}
      - LLM__PROVIDER=${LLM_PROVIDER:-gemini}
      
      # Pinecone Configuration
      - PINECONE__API_KEY=${PINECONE_API_KEY}
      - PINECONE__INDEX_NAME=${PINECONE_INDEX_NAME:-rag-index}
      - PINECONE__DIMENSION=${PINECONE_DIMENSION:-1536}
      - PINECONE__METRIC=${PINECONE_METRIC:-cosine}
      - PINECONE__CLOUD=${PINECONE_CLOUD:-aws}
      - PINECONE__REGION=${PINECONE_REGION:-us-east-1}
      - PINECONE__ENVIRONMENT=${PINECONE_ENVIRONMENT:-production}
      - PINECONE__QUESTIONS_NAMESPACE=${PINECONE_QUESTIONS_NAMESPACE:-questions}
      
      # Reranker Model
      - RERANKER__MODEL=${RERANKER_MODEL:-BAAI/bge-reranker-base}

      #REDIS
      - REDIS__HOST=${REDIS_HOST:-redis}
      - REDIS__PORT=${REDIS_PORT:-6379}
      - REDIS__DB=${REDIS_DB:-0}
      - REDIS__TTL_SECONDS=${REDIS_TTL_SECONDS:-3600}
      - REDIS__EMBEDDING_TTL_SECONDS=${REDIS_EMBEDDING_TTL_SECONDS:-86400}

    
    volumes:
      # Mount logs directory for persistence
      - ./logs:/app/logs
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    networks:
      - rag-network

    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:7.0-alpine
    container_name: rag-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - rag-network
    restart: unless-stopped

volumes:
  redis-data:

networks:
  rag-network:
    driver: bridge
